openapi: '3.0.0'
info:
  title: 'Message API'
  version: '1.0.0'
  description: 'API for managing messages'

components:
  schemas:
    Message:
      type: object
      required:
        - id
        - content
        - owner_id
        - receiver_id
        - created_at
      properties:
        id:
          type: string
        content:
          type: string
          minLength: 1
        owner_id:
          type: string
        receiver_id:
          type: string
        reply_to_message_id:
          type: string
          nullable: true
        created_at:
          type: number
        updated_at:
          type: number
          nullable: true
        deleted_at:
          type: number
          nullable: true

    CreateMessage:
      type: object
      required:
        - content
        - receiver_id
      properties:
        content:
          type: string
          minLength: 1
        receiver_id:
          type: string

    UpdateMessage:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          minLength: 1

    ReplyMessage:
      type: object
      required:
        - content
        - receiver_id
        - reply_to_message_id
      properties:
        content:
          type: string
          minLength: 1
        reply_to_message_id:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /messages/{id}:
    get:
      summary: Get a message by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Message found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Message not found

    put:
      summary: Update a message
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessage'
      responses:
        '200':
          description: Message updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Message not found

    delete:
      summary: Delete a message
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Message deleted
        '404':
          description: Message not found

  /messages:
    post:
      summary: Create a new message
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessage'
      responses:
        '201':
          description: Message created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

  /messages/reply:
    post:
      summary: Reply to a message
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyMessage'
      responses:
        '201':
          description: Reply created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Original message not found
